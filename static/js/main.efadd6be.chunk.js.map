{"version":3,"sources":["components/Stats/Stats.module.css","components/App/App.module.css","components/Input/Input.tsx","components/Stats/Stats.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx","components/Input/Input.module.css"],"names":["module","exports","Progress","props","className","styles","analyzing","Math","round","progress","Input","useState","username","setUsername","isAnalyzing","setIsAnalyzing","setProgress","isUsernameValid","setIsUsernameValid","isStatsAvailable","setIsStatsAvailable","isDisabled","setIsDisabled","getUserProfile","a","request","encodeURI","response","status","data","login","avatarUrl","avatar_url","name","url","html_url","getCommitsOnePage","page","q","per_page","mediaType","previews","items","result","Array","fill","item","hour","Date","commit","author","date","getHours","n","getCommits","limit","commits","i","length","getType","morningCommits","slice","reduce","b","afternoonCommits","eveningCommits","nightCommits","handleClick","trim","userProfile","setStats","type","header","data-testid","input","inputContainer","placeholder","value","disabled","onChange","e","target","button","onClick","footer","footerNote","href","rel","container","Stats","total","stats","max","containerClassName","hidden","bgMorning","bgAfternoon","bgEvening","bgNight","period","percent","info","infoContainer","src","alt","avatar","infoType","chart","chartContainer","map","key","chartColumnContainer","chartColumnPercent","toFixed","chartColumnData","chartColumnBar","_","chartSquare","chartColumnHour","column","footerHighlight","footerInfo","contentContainer","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,iBAAmB,gCAAgC,OAAS,sBAAsB,UAAY,yBAAyB,YAAc,2BAA2B,UAAY,yBAAyB,QAAU,uBAAuB,cAAgB,6BAA6B,OAAS,sBAAsB,SAAW,wBAAwB,eAAiB,8BAA8B,qBAAuB,oCAAoC,mBAAqB,kCAAkC,gBAAkB,+BAA+B,gBAAkB,+BAA+B,eAAiB,8BAA8B,YAAc,2BAA2B,OAAS,sBAAsB,gBAAkB,+BAA+B,WAAa,4B,mBCAp0BD,EAAOC,QAAU,CAAC,IAAM,mB,6KCQxB,SAASC,EAASC,GAChB,OAAO,sBAAKC,UAAWC,IAAOC,UAAvB,6BAAmDC,KAAKC,MAAuB,IAAjBL,EAAMM,UAApE,OAGM,SAASC,EAAMP,GAAgB,IAAD,EACXQ,mBAAiB,IADN,mBACpCC,EADoC,KAC1BC,EAD0B,OAELF,oBAAkB,GAFb,mBAEpCG,EAFoC,KAEvBC,EAFuB,OAGXJ,mBAAiB,GAHN,mBAGpCF,EAHoC,KAG1BO,EAH0B,OAIGL,oBAAkB,GAJrB,mBAIpCM,EAJoC,KAInBC,EAJmB,OAKKP,oBAAkB,GALvB,mBAKpCQ,EALoC,KAKlBC,EALkB,OAMPT,oBAAkB,GANX,mBAMpCU,EANoC,KAMxBC,EANwB,cAQ5BC,EAR4B,8EAQ3C,WAA8BX,GAA9B,eAAAY,EAAA,+EAGqBC,YAAQ,cAAD,OAAeC,UAAUd,KAHrD,OAGIe,EAHJ,+EAKW,MALX,UAO0B,MAApBA,EAASC,OAPf,0CAQW,MARX,iCAUS,CACLhB,SAAUe,EAASE,KAAKC,MACxBC,UAAWJ,EAASE,KAAKG,WACzBC,KAAMN,EAASE,KAAKI,KACpBC,IAAKP,EAASE,KAAKM,WAdvB,0DAR2C,+BAyB5BC,EAzB4B,gFAyB3C,WAAiCxB,EAAkByB,GAAnD,2BAAAb,EAAA,+EAE2BC,YAAQ,sBAAuB,CACpDa,EAAE,UAAD,OAAYZ,UAAUd,GAAtB,0BACD2B,SAAU,IACVF,KAAMA,EACNG,UAAW,CACTC,SAAU,CACR,YARV,UAY4B,OAVlBd,EAFV,QAYiBC,OAZjB,yCAaa,MAbb,OAeUc,EAAQf,EAASE,KAAKa,MACtBC,EAAS,IAAIC,MAAM,IAAIC,KAAK,GAhBtC,cAiBuBH,GAjBvB,IAiBI,2BAAWI,EAAe,QAClBC,EAAO,IAAIC,KAAKF,EAAKG,OAAOC,OAAOC,MAAMC,WAC/CpC,GAAY,SAACqC,GAAD,OAAOA,EAAI,KACvBV,EAAOI,KApBb,uDAsBWJ,GAtBX,2DAwBW,MAxBX,2DAzB2C,+BAqD5BW,EArD4B,8EAqD3C,WAA0B1C,GAA1B,uBAAAY,EAAA,sDACQ+B,EAAQ,GACRZ,EAAS,IAAIC,MAAM,IAAIC,KAAK,GAC9BR,EAAO,EAHb,YAISA,GAAQkB,GAJjB,iCAK0BnB,EAAkBV,UAAUd,GAAWyB,KALjE,UAKUmB,EALV,0DASI,IAASC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClCd,EAAOc,IAAMD,EAAQC,GAV3B,gDAaSd,GAbT,6CArD2C,sBAqE3C,SAASgB,EAAQH,GACf,IAAMI,EAAiBJ,EAAQK,MAAM,EAAG,IAAIC,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAC3DC,EAAmBR,EAAQK,MAAM,GAAI,IAAIC,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAC9DE,EAAiBT,EAAQK,MAAM,GAAI,IAAIC,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAC5DG,EAAeV,EAAQK,MAAM,EAAG,GAAGC,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAG9D,OAFY,CAACH,EAAgBI,EAAkBC,EAAgBC,GAAcJ,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,EAAIvC,EAAIuC,MAGxG,KAAKH,EACH,MAAO,UACT,KAAKI,EACH,MAAO,YACT,KAAKC,EACH,MAAO,UACT,KAAKC,EACH,MAAO,QAEX,MAAO,QAGT,IAAMC,EAAW,uCAAG,gCAAA3C,EAAA,6DAClBF,GAAc,GACdP,GAAe,GACfG,GAAmB,GACnBE,GAAoB,GAJF,SAM2BG,EAAeX,EAASwD,QANnD,UAOE,QADdC,EANY,gCAQhBnD,GAAmB,GACnBH,GAAe,GACfO,GAAc,GACdnB,EAAMmE,SAAS,MAXC,kCAclBpD,GAAmB,GAdD,UAgBIoC,EAAWe,EAAYzD,UAhB3B,WAiBK,KADjB4C,EAhBY,QAiBNE,QAAoD,IAApCF,EAAQM,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAjBvC,wBAkBhB3C,GAAoB,GACpBL,GAAe,GACfO,GAAc,GACdnB,EAAMmE,SAAS,MArBC,2BAwBlBlD,GAAoB,GAEpBL,GAAe,GACfO,GAAc,GACRiD,EAAcZ,EAAQH,GAC5BrD,EAAMmE,SAAS,CAACD,cAAab,UAASe,SA7BpB,4CAAH,qDAgCXC,EAAS,qBAAKpE,UAAWC,IAAOmE,OAAQC,cAAY,eAA3C,4CAETC,EAAQ,sBAAKtE,UAAWC,IAAOsE,eAAgBF,cAAY,cAAnD,UACZ,uBACErE,UAAWC,IAAOqE,MAClBH,KAAK,OACLK,YAAY,iBACZC,MAAOjE,EACPkE,SAAUzD,EACV0D,SAAU,SAACC,GAAD,OAAKnE,EAAYmE,EAAEC,OAAOJ,UAEtC,wBACEzE,UAAWC,IAAO6E,OAClBC,QAAShB,EACTW,SAAUzD,EAHZ,6BAOI+D,EAAS,sBAAKhF,UAAWC,IAAO+E,OAAQX,cAAY,eAA3C,UACZ3D,GAAe,cAACZ,EAAD,CAAUO,SAAUA,EAAW,OAC7CQ,GAAmB,uEACnBE,GAAoB,gCAClB,uDACA,sBAAKf,UAAWC,IAAOgF,WAAvB,2CACI,mBAAGC,KAAK,8DAA8DL,OAAO,SAASM,IAAI,aAA1F,kCADJ,yDAMN,OAAO,sBAAKnF,UAAWC,IAAOmF,UAAWf,cAAY,QAA9C,UACHD,EACAE,EACAU,K,4BC9JS,SAASK,EAAMtF,GAAgB,IAAD,8BACrCuF,EAAwB,OAAhBvF,EAAMwF,OAA0C,OAAxBxF,EAAMwF,MAAMnC,QAC9C,EACArD,EAAMwF,MAAMnC,QAAQM,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAEvClC,GAAO,UAAA1B,EAAMwF,aAAN,eAAanC,UAAb,gCACJrD,EAAMwF,aADF,aACJ,EAAanC,QAAQK,MAAM,IADvB,sBAC8B1D,EAAMwF,aADpC,aAC8B,EAAanC,QAAQK,MAAM,EAAG,KAEnE+B,GAAU,OAAJ/D,QAAI,IAAJA,OAAA,EAAAA,EAAMiC,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,EAAIvC,EAAIuC,OAAM2B,EAE/CG,EAAsB,SAACF,GAC3B,IAAKA,EACH,MAAM,GAAN,OAAUtF,IAAOmF,UAAjB,YAA8BnF,IAAOyF,QAEvC,OAAQH,EAAMpB,MACZ,IAAK,UACH,MAAM,GAAN,OAAUlE,IAAOmF,UAAjB,YAA8BnF,IAAO0F,WACvC,IAAK,YACH,MAAM,GAAN,OAAU1F,IAAOmF,UAAjB,YAA8BnF,IAAO2F,aACvC,IAAK,UACH,MAAM,GAAN,OAAU3F,IAAOmF,UAAjB,YAA8BnF,IAAO4F,WACvC,IAAK,QACH,MAAM,GAAN,OAAU5F,IAAOmF,UAAjB,YAA8BnF,IAAO6F,SAEzC,MAAM,GAAN,OAAU7F,IAAOmF,WAdS,CAezBrF,EAAMwF,OAEHQ,EAAU,SAACR,GACf,cAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAOpB,MACb,IAAK,UACH,MAAO,eACT,IAAK,YACH,MAAO,gBACT,IAAK,UACH,MAAO,gBACT,IAAK,QACH,MAAO,cACT,QACE,MAAO,IAXG,CAabpE,EAAMwF,OAEHS,EAAW,SAACT,GAChB,GAAc,OAAVA,EACF,OAAO,EAET,IAAInC,EAAU,GACd,OAAQmC,EAAMpB,MACZ,IAAK,UACHf,EAAUmC,EAAMnC,QAAQK,MAAM,EAAG,IACjC,MACF,IAAK,YACHL,EAAUmC,EAAMnC,QAAQK,MAAM,GAAI,IAClC,MACF,IAAK,UACHL,EAAUmC,EAAMnC,QAAQK,MAAM,GAAI,IAClC,MACF,IAAK,QACHL,EAAUmC,EAAMnC,QAAQK,MAAM,EAAG,GAGrC,OAAOL,EAAQM,QAAO,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAIuC,KAAK2B,EAnB1B,CAoBdvF,EAAMwF,OAEHU,EAAO,sBAAKjG,UAAWC,IAAOiG,cAAe7B,cAAY,aAAlD,UACX,qBAAK8B,IAAG,UAAEpG,EAAMwF,aAAR,iBAAE,EAAatB,mBAAf,aAAE,EAA0BtC,UAAWyE,IAAG,UAAErG,EAAMwF,aAAR,iBAAE,EAAatB,mBAAf,aAAE,EAA0BzD,SAAUR,UAAWC,IAAOoG,SAC1G,2CAAOtG,EAAMwF,aAAb,iBAAO,EAAatB,mBAApB,aAAO,EAA0BpC,KAAjC,SACA,oBAAGqD,KAAI,UAAEnF,EAAMwF,aAAR,iBAAE,EAAatB,mBAAf,aAAE,EAA0BnC,IAAK+C,OAAO,SAASM,IAAI,aAA5D,wBAA2EpF,EAAMwF,aAAjF,iBAA2E,EAAatB,mBAAxF,aAA2E,EAA0BzD,YACrG,0DAAmD,WAAtB,UAAAT,EAAMwF,aAAN,eAAapB,MAAmB,KAAO,YACpE,qBAAKnE,UAAWC,IAAOqG,SAAUjC,cAAY,aAA7C,mBAA2DtE,EAAMwF,aAAjE,aAA2D,EAAapB,UAapEoC,EAAQ,qBAAKvG,UAAWC,IAAOuG,eAAgBnC,cAAY,cAAnD,gBACX5C,QADW,IACXA,OADW,EACXA,EAAMgF,KAAI,SAACxD,EAAGI,GAAJ,OAXE,SAACqD,EAAalB,EAAavC,EAAWN,GAAtC,OAAuD,sBAAK3C,UAAWC,IAAO0G,qBAAvB,UACpE,sBAAK3G,UAAWC,IAAO2G,mBAAvB,WAAiD,IAAJ3D,GAAS4D,QAAQ,GAA9D,OACA,sBAAK7G,UAAWC,IAAO6G,gBAAvB,UACE,qBAAK9G,UAAWC,IAAO8G,eAAvB,SACG,IAAIvE,MAAMrC,KAAKC,MAAM6C,EAAIuC,EAAM,KAAK/C,KAAK,GAAGgE,KAAI,SAACO,EAAG3D,GAAJ,OAAU,qBAAKrD,UAAWC,IAAOgH,aAAvB,iBAAmD5D,SAEhH,sBAAKrD,UAAWC,IAAOiH,gBAAvB,UAAyCvE,EAAzC,cANoH+D,GAWjGS,CAAO,UAAD,OAAW9D,GAAKmC,EAAMF,EAAOrC,EAAIqC,GAAQjC,EAAI,GAAK,SAGzE2B,EAAS,sBAAKhF,UAAWC,IAAO+E,OAAQX,cAAY,eAA3C,UACb,uBAAMrE,UAAWC,IAAOmH,gBAAxB,WAAmD,IAARpB,GAAaa,QAAQ,GAAhE,OACA,uBAAM7G,UAAWC,IAAOoH,WAAxB,4BAAoD/B,EAApD,iCACA,sBAAMtF,UAAWC,IAAOmH,gBAAxB,SAA0CrB,IAH7B,OAMf,OAAO,qBAAK/F,UAAWyF,EAAoBpB,cAAY,QAAhD,SACL,sBAAKrE,UAAWC,IAAOqH,iBAAvB,UACIrB,EACAM,EACAvB,O,qBClGO,SAASuC,IAAO,IAAD,EACFhH,mBAAsB,MADpB,mBACrBgF,EADqB,KACdrB,EADc,KAG5B,OAAO,sBAAKlE,UAAWC,IAAOuH,IAAvB,UACO,OAAVjC,GAAkB,cAACjF,EAAD,CAAO4D,SAAUA,IACrC,cAACmB,EAAD,CAAOE,MAAOA,OCTlB,IAYekC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAM1Bb,K,kBCfA7H,EAAOC,QAAU,CAAC,UAAY,yBAAyB,OAAS,sBAAsB,MAAQ,qBAAqB,OAAS,sBAAsB,OAAS,sBAAsB,UAAY,yBAAyB,WAAa,6B","file":"static/js/main.efadd6be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stats_container__dQ_Ih\",\"contentContainer\":\"Stats_contentContainer__2erZ-\",\"hidden\":\"Stats_hidden__fxN-7\",\"bgMorning\":\"Stats_bgMorning__AWkHk\",\"bgAfternoon\":\"Stats_bgAfternoon__3TH_7\",\"bgEvening\":\"Stats_bgEvening__rWkCH\",\"bgNight\":\"Stats_bgNight__1ScOw\",\"infoContainer\":\"Stats_infoContainer__OGNss\",\"avatar\":\"Stats_avatar__c2arW\",\"infoType\":\"Stats_infoType__70ZdC\",\"chartContainer\":\"Stats_chartContainer__1crQS\",\"chartColumnContainer\":\"Stats_chartColumnContainer__bLbaE\",\"chartColumnPercent\":\"Stats_chartColumnPercent__2Q2vX\",\"chartColumnHour\":\"Stats_chartColumnHour__2fxiG\",\"chartColumnData\":\"Stats_chartColumnData__15hQX\",\"chartColumnBar\":\"Stats_chartColumnBar__8NxPV\",\"chartSquare\":\"Stats_chartSquare__1fn5A\",\"footer\":\"Stats_footer__kE75M\",\"footerHighlight\":\"Stats_footerHighlight__1dsWS\",\"footerInfo\":\"Stats_footerInfo__21FRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3F_2V\"};","import React, {useState} from \"react\";\r\nimport {IStats, IUserProfile, IType} from \"../../Interfaces\";\r\nimport {request} from \"@octokit/request\";\r\nimport styles from './Input.module.css';\r\n\r\ninterface IProps {\r\n  setStats: (stats: IStats|null) => void\r\n}\r\n\r\nfunction Progress(props: { progress:number }) {\r\n  return <div className={styles.analyzing}>Fetching data - {Math.round(props.progress * 100)}%</div>\r\n}\r\n\r\nexport default function Input(props: IProps) {\r\n  const [username, setUsername] = useState<string>('')\r\n  const [isAnalyzing, setIsAnalyzing] = useState<boolean>(false)\r\n  const [progress, setProgress] = useState<number>(0)\r\n  const [isUsernameValid, setIsUsernameValid] = useState<boolean>(true)\r\n  const [isStatsAvailable, setIsStatsAvailable] = useState<boolean>(true)\r\n  const [isDisabled, setIsDisabled] = useState<boolean>(false)\r\n\r\n  async function getUserProfile(username: string): Promise<IUserProfile|null> {\r\n    let response\r\n    try {\r\n      response = await request(`GET /users/${encodeURI(username)}`)\r\n    } catch (error) {\r\n      return null\r\n    }\r\n    if (response.status !== 200) {\r\n      return null\r\n    }\r\n    return {\r\n      username: response.data.login,\r\n      avatarUrl: response.data.avatar_url,\r\n      name: response.data.name,\r\n      url: response.data.html_url\r\n    }\r\n  }\r\n  async function getCommitsOnePage(username: string, page: number): Promise<number[]|null> {\r\n    try {\r\n      const response = await request('GET /search/commits', {\r\n        q: `author:${encodeURI(username)}+sort:author-date-desc`,\r\n        per_page: 100,\r\n        page: page,\r\n        mediaType: {\r\n          previews: [\r\n            'cloak'\r\n          ]\r\n        }\r\n      })\r\n      if (response.status !== 200) {\r\n        return null\r\n      }\r\n      const items = response.data.items\r\n      const result = new Array(24).fill(0)\r\n      for (const item of items) {\r\n        const hour = new Date(item.commit.author.date).getHours()\r\n        setProgress((n) => n + 1)\r\n        result[hour]++\r\n      }\r\n      return result\r\n    } catch (error) {\r\n      return null\r\n    }\r\n  }\r\n\r\n  async function getCommits(username: string): Promise<number[]> {\r\n    const limit = 10\r\n    const result = new Array(24).fill(0)\r\n    let page = 1\r\n    while (page <= limit) {\r\n      const commits = await getCommitsOnePage(encodeURI(username), page++)\r\n      if (!commits) {\r\n        break\r\n      }\r\n      for (let i = 0; i < commits.length; i++) {\r\n        result[i] += commits[i]\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  function getType(commits: number[]): IType {\r\n    const morningCommits = commits.slice(6, 12).reduce((a, b) => a + b)\r\n    const afternoonCommits = commits.slice(12, 18).reduce((a, b) => a + b)\r\n    const eveningCommits = commits.slice(18, 24).reduce((a, b) => a + b)\r\n    const nightCommits = commits.slice(0, 6).reduce((a, b) => a + b)\r\n    const max = [morningCommits, afternoonCommits, eveningCommits, nightCommits].reduce((a, b) => a > b ? a : b)\r\n\r\n    switch (max) {\r\n      case morningCommits:\r\n        return 'morning'\r\n      case afternoonCommits:\r\n        return 'afternoon'\r\n      case eveningCommits:\r\n        return 'evening'\r\n      case nightCommits:\r\n        return 'night'\r\n    }\r\n    return 'night'\r\n  }\r\n\r\n  const handleClick = async () => {\r\n    setIsDisabled(true)\r\n    setIsAnalyzing(true)\r\n    setIsUsernameValid(true)\r\n    setIsStatsAvailable(true)\r\n\r\n    const userProfile: IUserProfile|null = await getUserProfile(username.trim())\r\n    if (userProfile === null) {\r\n      setIsUsernameValid(false)\r\n      setIsAnalyzing(false)\r\n      setIsDisabled(false)\r\n      props.setStats(null)\r\n      return\r\n    }\r\n    setIsUsernameValid(true)\r\n\r\n    const commits = await getCommits(userProfile.username)\r\n    if (commits.length === 0 || commits.reduce((a, b) => a + b) === 0) {\r\n      setIsStatsAvailable(false)\r\n      setIsAnalyzing(false)\r\n      setIsDisabled(false)\r\n      props.setStats(null)\r\n      return\r\n    }\r\n    setIsStatsAvailable(true)\r\n\r\n    setIsAnalyzing(false)\r\n    setIsDisabled(false)\r\n    const type: IType = getType(commits)\r\n    props.setStats({userProfile, commits, type})\r\n  }\r\n\r\n  const header = <div className={styles.header} data-testid=\"input-header\">When Do You Make Most Commits?</div>\r\n\r\n  const input = <div className={styles.inputContainer} data-testid=\"input-input\">\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      placeholder=\"Your GitHub ID\"\r\n      value={username}\r\n      disabled={isDisabled}\r\n      onChange={(e)=>setUsername(e.target.value)}\r\n    />\r\n    <button\r\n      className={styles.button}\r\n      onClick={handleClick}\r\n      disabled={isDisabled}\r\n    >&#x1F50D;</button>\r\n  </div>\r\n\r\n  const footer = <div className={styles.footer} data-testid=\"input-footer\">\r\n    {isAnalyzing && <Progress progress={progress / 1000} />}\r\n    {!isUsernameValid && <div>This user does not seem to exist...</div>}\r\n    {!isStatsAvailable && <div>\r\n        <div>No data available...</div>\r\n        <div className={styles.footerNote}>This may be caused by GitHub's\r\n            <a href=\"https://docs.github.com/en/rest/reference/search#rate-limit\" target=\"_blank\" rel=\"noreferrer\">rate limiting policy</a>\r\n            , please try again at least one minute later.</div>\r\n    </div> }\r\n  </div>\r\n\r\n  return <div className={styles.container} data-testid=\"input\">\r\n    { header }\r\n    { input }\r\n    { footer }\r\n  </div>\r\n}","import React from 'react';\r\nimport {IStats} from \"../../Interfaces\";\r\nimport styles from './Stats.module.css';\r\n\r\ninterface IProps {\r\n  stats: IStats|null\r\n}\r\n\r\nexport default function Stats(props: IProps) {\r\n  const total = props.stats === null || props.stats.commits === null\r\n    ? 1\r\n    : props.stats.commits.reduce((a, b) => a + b)\r\n\r\n  const data = props.stats?.commits\r\n    && [...props.stats?.commits.slice(6), ...props.stats?.commits.slice(0, 6)]\r\n\r\n  const max = data?.reduce((a, b) => a > b ? a : b) || total\r\n\r\n  const containerClassName = ((stats: IStats|null) => {\r\n    if (!stats) {\r\n      return `${styles.container} ${styles.hidden}`\r\n    }\r\n    switch (stats.type) {\r\n      case 'morning':\r\n        return `${styles.container} ${styles.bgMorning}`\r\n      case 'afternoon':\r\n        return `${styles.container} ${styles.bgAfternoon}`\r\n      case 'evening':\r\n        return `${styles.container} ${styles.bgEvening}`\r\n      case 'night':\r\n        return `${styles.container} ${styles.bgNight}`\r\n    }\r\n    return `${styles.container}`\r\n  })(props.stats)\r\n\r\n  const period = ((stats: IStats|null) => {\r\n    switch (stats?.type) {\r\n      case 'morning':\r\n        return '6:00 - 12:00'\r\n      case 'afternoon':\r\n        return '12:00 - 18:00'\r\n      case 'evening':\r\n        return '18:00 - 24:00'\r\n      case 'night':\r\n        return '0:00 - 6:00'\r\n      default:\r\n        return ''\r\n    }\r\n  })(props.stats)\r\n\r\n  const percent = ((stats: IStats|null) => {\r\n    if (stats === null) {\r\n      return 0\r\n    }\r\n    let commits = []\r\n    switch (stats.type) {\r\n      case 'morning':\r\n        commits = stats.commits.slice(6, 12)\r\n        break\r\n      case 'afternoon':\r\n        commits = stats.commits.slice(12, 18)\r\n        break\r\n      case 'evening':\r\n        commits = stats.commits.slice(18, 24)\r\n        break\r\n      case 'night':\r\n        commits = stats.commits.slice(0, 6)\r\n        break\r\n    }\r\n    return commits.reduce((a, b) => a + b) / total\r\n  })(props.stats)\r\n\r\n  const info = <div className={styles.infoContainer} data-testid=\"stats-info\">\r\n    <img src={props.stats?.userProfile?.avatarUrl} alt={props.stats?.userProfile?.username} className={styles.avatar} />\r\n    <span>{props.stats?.userProfile?.name} ( </span>\r\n    <a href={props.stats?.userProfile?.url} target=\"_blank\" rel=\"noreferrer\">@{props.stats?.userProfile?.username}</a>\r\n    <span> ) makes most commits {props.stats?.type === 'night' ? 'at' : 'in the'}</span>\r\n    <div className={styles.infoType} data-testid=\"stats-type\">{props.stats?.type}</div>\r\n  </div>\r\n\r\n  const column = (key: string, max: number, n: number, hour: number) => <div className={styles.chartColumnContainer} key={key}>\r\n    <div className={styles.chartColumnPercent}>{(n * 100).toFixed(0)}%</div>\r\n    <div className={styles.chartColumnData}>\r\n      <div className={styles.chartColumnBar}>\r\n        {new Array(Math.round(n / max * 10)).fill(0).map((_, i) => <div className={styles.chartSquare} key={`square-${i}`}/>)}\r\n      </div>\r\n      <div className={styles.chartColumnHour}>{hour}:00</div>\r\n    </div>\r\n  </div>\r\n\r\n  const chart = <div className={styles.chartContainer} data-testid=\"stats-chart\">\r\n    {data?.map((n, i) => column(`column-${i}`, max / total, n / total, (i + 6) % 24))}\r\n  </div>\r\n\r\n  const footer = <div className={styles.footer} data-testid=\"stats-footer\">\r\n    <span className={styles.footerHighlight}>{(percent*100).toFixed(0)}%</span>\r\n    <span className={styles.footerInfo}> of the latest {total} commits were made between </span>\r\n    <span className={styles.footerHighlight}>{period}</span>.\r\n  </div>\r\n\r\n  return <div className={containerClassName} data-testid=\"stats\">\r\n    <div className={styles.contentContainer}>\r\n      { info }\r\n      { chart }\r\n      { footer }\r\n    </div>\r\n  </div>\r\n}","import React, {useState} from 'react';\r\nimport {IStats} from '../../Interfaces';\r\nimport Input from '../Input/Input';\r\nimport Stats from '../Stats/Stats';\r\nimport styles from './App.module.css'\r\n\r\nexport default function App() {\r\n  const [stats, setStats] = useState<IStats|null>(null)\r\n\r\n  return <div className={styles.app}>\r\n    { stats === null && <Input setStats={setStats}/> }\r\n    <Stats stats={stats} />\r\n  </div>\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__1HA2y\",\"header\":\"Input_header__1aJZP\",\"input\":\"Input_input__oGyEk\",\"button\":\"Input_button__25QQU\",\"footer\":\"Input_footer__36BxR\",\"analyzing\":\"Input_analyzing__11Lj3\",\"footerNote\":\"Input_footerNote__2JoeV\"};"],"sourceRoot":""}